// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//enums

enum Role {
  ADMIN
  USER
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  role      Role     @default(USER)
  borrows   Borrow[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Author {
  id        String   @id @default(uuid())
  name      String   @unique
  birthDate DateTime
  bio       String
  books     Book[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Book {
  id              String   @id @default(uuid())
  title           String
  author          Author   @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId        String
  genre           String
  publishedYear   Int
  availableCopies Int
  borrows         Borrow[]
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Borrow {
  id         String   @id @default(uuid())
  book       Book?    @relation(fields: [bookId], references: [id], onDelete: SetNull)
  bookId     String?
  borrower   User?    @relation(fields: [borrowerId], references: [id], onDelete: SetNull)
  borrowerId String?
  borrowDate DateTime
  returnDate DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
